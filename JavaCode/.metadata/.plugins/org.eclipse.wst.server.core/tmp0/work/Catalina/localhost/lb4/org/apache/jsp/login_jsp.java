/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-05-30 11:48:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	// 获取绝对路径路径 ,开发项目一定要使用绝对路径，不然肯定出错
	String path = request.getContextPath();
	String basePath = request.getScheme() + "://" + request.getServerName() + ":" 
		+ request.getServerPort() + path + "/";
	//http://localhost:3306/

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>系统登录</title>\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"css/headFoot.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" type=\"text/css\" href=\"css/login.css\">\r\n");
      out.write("	\r\n");
      out.write("	<!-- 设置根路径 -->\r\n");
      out.write("	<!-- html中的超链接就会相对与这个路径去找文件 -->\r\n");
      out.write("	<base href=\"");
      out.print(basePath );
      out.write("\" />\r\n");
      out.write("	\r\n");
      out.write("	<style type=\"text/css\">\r\n");
      out.write("		body{\r\n");
      out.write("			background: url(\"images/bg5.jpg\");\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<!-- 头部开始 -->\r\n");
      out.write("	<div id=\"header\">\r\n");
      out.write("		<div id=\"logo\">\r\n");
      out.write("			<img src=\"./images/bg16.jpg\" border=\"0\"/><br/>\r\n");
      out.write("		</div>\r\n");
      out.write("			\r\n");
      out.write("		<div id=\"banner\">好好学习，天天向上</div>\r\n");
      out.write("			\r\n");
      out.write("		<img id=\"computer\" src=\"./images/head.gif\" align=\"middle\"/>\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 头部结束 -->\r\n");
      out.write("		\r\n");
      out.write("	<!-- 主体开始 -->\r\n");
      out.write("	<div id=\"page\">\r\n");
      out.write("		<br/><br/><br/><br/>\r\n");
      out.write("		<!-- 登陆框开始 -->\r\n");
      out.write("		<div id=\"login\">\r\n");
      out.write("			\r\n");
      out.write("			<!-- 登陆框标题 -->\r\n");
      out.write("			<div id=\"title\">\r\n");
      out.write("				<h1><img alt=\"\" src=\"images/quanx32.gif\" width=\"32\" height=\"32\" align=\"middle\"/>\r\n");
      out.write("				&nbsp;系统登录</h1>\r\n");
      out.write("			</div>\r\n");
      out.write("				\r\n");
      out.write("			<!-- 提交表单开始 -->\r\n");
      out.write("			<form id=\"form1\" action=\"login-do-info.jsp\" method=\"post\">\r\n");
      out.write("				<div id=\"content\">\r\n");
      out.write("				\r\n");
      out.write("               		<span>账号：</span>\r\n");
      out.write("               		<input type=\"text\" name=\"username\" id=\"username\" placeholder=\"请输入您的账号\" autofocus=\"autofocus\"required=\"required\">\r\n");
      out.write("           			<br/>\r\n");
      out.write("           			\r\n");
      out.write("           			<span>密码：</span>\r\n");
      out.write("               		<input type=\"password\" name=\"password\" id=\"password\" placeholder=\"请输入您的密码\"required=\"required\">\r\n");
      out.write("               		<br/>\r\n");
      out.write("               		\r\n");
      out.write("               		<a href=\"search-password.jsp\">找回密码</a>\r\n");
      out.write("           			<br/>\r\n");
      out.write("           			\r\n");
      out.write("                   	<input type=\"submit\" value=\"登录\"/>\r\n");
      out.write("                   	<input type=\"reset\" value=\"重置\"/>\r\n");
      out.write("                   	\r\n");
      out.write("                   	<!-- blank&&_blank -->\r\n");
      out.write("               		<a href=\"register.jsp\" target=\"_blank\">注册</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</form>\r\n");
      out.write("			<!-- 提交表单结束 -->\r\n");
      out.write("			<br/>\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 登陆框结束 -->\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- 主体结束 -->\r\n");
      out.write("		\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
