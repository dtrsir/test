/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2022-05-23 14:28:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class admin_002dhome_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <title>管理员主页</title>\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("          body{\r\n");
      out.write("            background: url(\"images/bg5.jpg\");\r\n");
      out.write("            text-align: center;\r\n");
      out.write("             color: #000000;\r\n");
      out.write("            }\r\n");
      out.write("            a:hover{\r\n");
      out.write("			color: 	#FFFFFF;\r\n");
      out.write("			padding: 5px 8px 3px 12px;\r\n");
      out.write("			background-color: 	#BDB76B;\r\n");
      out.write("			border-top: #717171;\r\n");
      out.write("			border-left: #717171;\r\n");
      out.write("			border-bottom: #eee;\r\n");
      out.write("			border-right: #eee;\r\n");
      out.write("				}\r\n");
      out.write("				 *{\r\n");
      out.write("        padding: 0;\r\n");
      out.write("        margin: 0;\r\n");
      out.write("    }\r\n");
      out.write("    html,body{\r\n");
      out.write("        height: 100%;\r\n");
      out.write("    }\r\n");
      out.write("    .wrap{\r\n");
      out.write("        width: 260px;\r\n");
      out.write("        height: 100%;\r\n");
      out.write("        background-color:#5F9EA0;\r\n");
      out.write("    }\r\n");
      out.write(" \r\n");
      out.write("    .header{\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 65px;\r\n");
      out.write("        background-color: #8FBC8F;\r\n");
      out.write("        font-size: 24px;\r\n");
      out.write("        color: #000000;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        line-height: 65px;\r\n");
      out.write("    }\r\n");
      out.write("    .nav{\r\n");
      out.write("        width:250px;\r\n");
      out.write("        margin: 10px 5px 0;\r\n");
      out.write("    }\r\n");
      out.write("    .list{\r\n");
      out.write("        margin-bottom: 5px;\r\n");
      out.write("    }\r\n");
      out.write("    .list h2{\r\n");
      out.write("        position: relative;\r\n");
      out.write("        padding: 15px 0;\r\n");
      out.write("        background-color: #8FBC8F;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        font-size: 16px;\r\n");
      out.write("        color: #000000;\r\n");
      out.write("        transition: .5s;\r\n");
      out.write("    }\r\n");
      out.write("    .list h2.on{\r\n");
      out.write("        background-color: #8FBC8F;\r\n");
      out.write("    }\r\n");
      out.write("    .list i{\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        right: 10px;\r\n");
      out.write("        top: 16px;\r\n");
      out.write("        border: 8px solid transparent;\r\n");
      out.write("        border-left-color: #fff;/*triangle*/\r\n");
      out.write("        transform:rotate(0deg);\r\n");
      out.write("        transform-origin: 1px 8px;\r\n");
      out.write("        transition: .5s;\r\n");
      out.write("    }\r\n");
      out.write("    .list i.on{\r\n");
      out.write("        transform:rotate(90deg);\r\n");
      out.write("    }\r\n");
      out.write("    .hide{\r\n");
      out.write("        overflow: hidden;\r\n");
      out.write("        height: 0;\r\n");
      out.write("        transition: .5s;\r\n");
      out.write("    }\r\n");
      out.write("    .hide h5{\r\n");
      out.write("        padding: 10px 0;\r\n");
      out.write("        background-color: #8FBC8F;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        color:#fff;\r\n");
      out.write("        border-bottom:#42495d;\r\n");
      out.write("    }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "top.jsp", out, false);
      out.write("\r\n");
      out.write("<h2>欢迎来到图书知识海洋</h2>\r\n");
      out.write("<h3>读书破万卷，下笔如有神</h3>\r\n");
      out.write("<br/>\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"wrap\">\r\n");
      out.write("        <div class=\"header\">管理员操作</div>\r\n");
      out.write("        <div class=\"nav\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li class=\"list\">\r\n");
      out.write("                    <h2><i></i>管理用户</h2>\r\n");
      out.write("                    <div class=\"hide\">\r\n");
      out.write("                        <h5><h5><a href=\"admin-user-manager.jsp\">管理用户</a><h5></h5>\r\n");
      out.write("                        <h5><a href=\"admin-user-add.jsp\">新增用户</a></h5>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </li>\r\n");
      out.write("                <li class=\"list\">\r\n");
      out.write("                    <h2><i></i>管理图书</h2>\r\n");
      out.write("                    <div class=\"hide\">\r\n");
      out.write("                        <h5><h5><a href=\"admin-book-manager.jsp\">管理图书</a></h5></h5>\r\n");
      out.write("                        <h5><a href=\"admin-book-add.jsp\">新增图书</a></h5>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </li>\r\n");
      out.write("             \r\n");
      out.write("                \r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <script>\r\n");
      out.write("        (function () {\r\n");
      out.write("            var oList = document.querySelectorAll('.list h2'),\r\n");
      out.write("                oHide = document.querySelectorAll('.hide'),\r\n");
      out.write("                oIcon = document.querySelectorAll('.list i'),\r\n");
      out.write("                lastIndex = 0;\r\n");
      out.write("            for(var i=0;i<oList.length;i++){\r\n");
      out.write("                oList[i].index = i;//自定义属性\r\n");
      out.write("                oList[i].isClick = false;\r\n");
      out.write("                oList[i].initHeight = oHide[i].clientHeight;\r\n");
      out.write("                oHide[i].style.height = '0';\r\n");
      out.write("                oList[i].onclick = function () {\r\n");
      out.write("                    if(this.isClick){\r\n");
      out.write("                        oHide[this.index].style.height = '0';\r\n");
      out.write("                        oIcon[this.index].className = '';\r\n");
      out.write("                        oList[this.index].className = '';\r\n");
      out.write("                        oList[this.index].isClick = false;\r\n");
      out.write("                    }\r\n");
      out.write("                    else{\r\n");
      out.write("                        oHide[lastIndex].style.height = '0';\r\n");
      out.write("                        oIcon[lastIndex].className = '';\r\n");
      out.write("                        oList[lastIndex].className = '';\r\n");
      out.write("                        oHide[this.index].style.height = '220px';\r\n");
      out.write("                        oIcon[this.index].className = 'on';\r\n");
      out.write("                        oList[this.index].className = 'on';\r\n");
      out.write("                        oList[lastIndex].isClick = false;\r\n");
      out.write("                        oList[this.index].isClick = true;\r\n");
      out.write("                        lastIndex = this.index;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        })();\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
